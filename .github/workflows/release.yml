name: Build and Sign LiteUpper Desktop

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Import GPG key
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: echo "$GPG_PRIVATE_KEY" | gpg --batch --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Build Electron App
        run: npx electron-builder --publish never
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload Built Files
        uses: actions/upload-artifact@v4
        with:
          name: LiteUpper-${{ matrix.os }}
          path: dist/

  sign-windows:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: LiteUpper-windows-latest
          path: dist/

      - name: Download and Extract CodeSignTool
        run: |
          Invoke-WebRequest -Uri "https://app.esigner.com/documents/3da50ef7-95ea-4b8b-b9c2-20122b641c4d/file" -OutFile codesigner.zip
          Expand-Archive -Path codesigner.zip -DestinationPath codesigner

      - name: Sign All EXEs
        run: |
          $exeFiles = Get-ChildItem -Path dist -Filter *.exe -Recurse | Select-Object -ExpandProperty FullName
          foreach ($exe in $exeFiles) {
            Write-Host "Signing: $exe"
            .\codesigner\CodeSignTool.bat sign `
              --username "${{ secrets.ES_USERNAME }}" `
              --password "${{ secrets.ES_PASSWORD }}" `
              --credential_id "${{ secrets.CREDENTIAL_ID }}" `
              --otp "${{ secrets.ES_TOTP_SECRET }}" `
              --input "$exe" `
              --output "$exe"
          }

      - name: Find Setup EXE for Release
        id: find_setup_exe
        run: |
          $setupExe = Get-ChildItem -Path dist -Filter "*Setup*.exe" -Recurse | Select-Object -First 1 -ExpandProperty FullName
          echo "SETUP_EXE=$setupExe" >> $env:GITHUB_ENV

      - name: Publish Setup EXE to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ env.SETUP_EXE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
