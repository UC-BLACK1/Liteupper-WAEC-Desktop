name: Build and Sign LiteUpper Windows App

on:
  push:
    tags:
      - "v*"  # Runs when a tag like v1.0.0 is pushed

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Electron App
        run: npx electron-builder --win --publish never
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Download and Install SSL.com CodeSignTool
        run: |
          curl -LO https://cdn.ssl.com/esigner/codesigner-windows.zip
          tar -xf codesigner-windows.zip
          move CodeSignTool.exe C:\Windows\System32\

      - name: Sign Windows Executable
        run: |
          CodeSignTool.exe sign --username "${{ secrets.ES_USERNAME }}" --password "${{ secrets.ES_PASSWORD }}" --credential_id "${{ secrets.CREDENTIAL_ID }}" --totp_secret "${{ secrets.ES_TOTP_SECRET }}" --file_path "dist/LiteUpper.exe" --output_path "dist/signed/"
        env:
          ES_USERNAME: ${{ secrets.ES_USERNAME }}
          ES_PASSWORD: ${{ secrets.ES_PASSWORD }}
          CREDENTIAL_ID: ${{ secrets.CREDENTIAL_ID }}
          ES_TOTP_SECRET: ${{ secrets.ES_TOTP_SECRET }}

      - name: Upload Signed Executable
        uses: actions/upload-artifact@v4
        with:
          name: LiteUpper-${{ matrix.os }}
          path: dist/

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/**
          body: "ðŸš€ New LiteUpper Release! Download the latest version below."
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
